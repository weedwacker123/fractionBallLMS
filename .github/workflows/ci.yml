name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8
    
    - name: Run Black
      run: black --check .
    
    - name: Run isort
      run: isort --check-only .
    
    - name: Run Flake8
      run: flake8 .

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_fractionball
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up environment variables
      run: |
        echo "DEBUG=1" >> .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_fractionball" >> .env
        echo "REDIS_URL=redis://localhost:6379/0" >> .env
        echo "FIREBASE_PROJECT_ID=test-project" >> .env
        echo "FIREBASE_PRIVATE_KEY_ID=test-key-id" >> .env
        echo "FIREBASE_PRIVATE_KEY=test-private-key" >> .env
        echo "FIREBASE_CLIENT_EMAIL=test@test.com" >> .env
        echo "FIREBASE_CLIENT_ID=test-client-id" >> .env
    
    - name: Run migrations
      run: |
        python manage.py migrate
    
    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
